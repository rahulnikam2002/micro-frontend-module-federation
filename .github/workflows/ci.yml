name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  # ----------------------------------------
  # 1️⃣ Install dependencies
  # ----------------------------------------
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            **/.yarn/cache
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

  # ----------------------------------------
  # 2️⃣ Run tests (container)
  # ----------------------------------------
  test-container:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run container tests
        run: yarn workspace container test --coverage

      - name: Upload container coverage
        uses: actions/upload-artifact@v3
        with:
          name: container-coverage
          path: packages/container/coverage

  # ----------------------------------------
  # 3️⃣ Run tests (remote)
  # ----------------------------------------
  test-remote:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run remote tests
        run: yarn workspace remote test --coverage

      - name: Upload remote coverage
        uses: actions/upload-artifact@v3
        with:
          name: remote-coverage
          path: packages/remote/coverage

  # ----------------------------------------
  # 4️⃣ SonarCloud Analysis
  # ----------------------------------------
  sonarcloud:
    runs-on: ubuntu-latest
    needs: [test-container, test-remote]
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Download coverage artifacts
        uses: actions/download-artifact@v3
        with:
          name: container-coverage
          path: packages/container/coverage

      - name: Download remote coverage
        uses: actions/download-artifact@v3
        with:
          name: remote-coverage
          path: packages/remote/coverage

      - name: Run SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          organization: YOUR_ORG_KEY
          token: ${{ secrets.SONAR_TOKEN }}
          projectKey: rahulnikam2002_micro-frontend-module-federation
          projectName: micro-frontend-module-federation
          sources: packages/container/src,packages/remote/src
          tests: packages/container/src/__tests__,packages/remote/src/__tests__
          coverage: packages/container/coverage/lcov.info,packages/remote/coverage/lcov.info
          pullRequestKey: ${{ github.event.pull_request.number }}
          pullRequestBranch: ${{ github.head_ref }}
          pullRequestBase: ${{ github.base_ref }}

name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  # ----------------------------------------
  # 1️⃣ Setup & install dependencies
  # ----------------------------------------
  setup:
    runs-on: ubuntu-latest
    outputs:
      packages-json: ${{ steps.list-packages.outputs.packages-json }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: List all packages
        id: list-packages
        run: |
          PACKAGES=$(ls -d packages/*/ | xargs -n1 basename | jq -R -s -c 'split("\n")[:-1]')
          echo "packages-json=$PACKAGES" >> $GITHUB_OUTPUT

  # ----------------------------------------
  # 2️⃣ Run tests and upload coverage dynamically
  # ----------------------------------------
  test:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        pkg: ${{ fromJSON(needs.setup.outputs.packages-json) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests for ${{ matrix.pkg }}
        run: |
          echo "Running tests for package: ${{ matrix.pkg }}"
          yarn workspace ${{ matrix.pkg }} test --coverage

      - name: Upload coverage for ${{ matrix.pkg }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg }}-coverage
          path: packages/${{ matrix.pkg }}/coverage

  # ----------------------------------------
  # 3️⃣ SonarCloud Analysis
  # ----------------------------------------
  sonarcloud:
    runs-on: ubuntu-latest
    needs: test
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: container-coverage
          path: packages/container/coverage

      - name: Download remote coverage
        uses: actions/download-artifact@v4
        with:
          name: remote-coverage
          path: packages/remote/coverage

      - name: Run SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2
        with:
          entryPoint: .
          args: >
            -Dsonar.organization=rahulnikam2002
            -Dsonar.projectKey=rahulnikam2002_micro-frontend-module-federation
            -Dsonar.projectName=micro-frontend-module-federation
            -Dsonar.sources=packages/container/src,packages/remote/src
            -Dsonar.tests=packages/container/src/__tests__,packages/remote/src/__tests__
            -Dsonar.javascript.lcov.reportPaths=packages/container/coverage/lcov.info,packages/remote/coverage/lcov.info
